import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
	id "java-library"
}

def isLocalDevEnv = (System.getenv("CI") == null)

configurations.all {
	resolutionStrategy {
		failOnVersionConflict()
	}
}
tasks.withType(Test) {
	useJUnitPlatform {
		systemProperties = [
				"junit.jupiter.extensions.autodetection.enabled": "true",
				"junit.jupiter.execution.timeout.default"       : "1 m",
				"junit.jupiter.execution.parallel.enabled"      : true,
		]
	}
	testLogging {
		events = [
				TestLogEvent.SKIPPED,
				TestLogEvent.FAILED,
		]
		exceptionFormat TestExceptionFormat.SHORT
		events = [
				TestLogEvent.SKIPPED,
				TestLogEvent.FAILED,
		]
		exceptionFormat TestExceptionFormat.SHORT
		if (isLocalDevEnv) {
			exceptionFormat TestExceptionFormat.FULL
			events += TestLogEvent.PASSED
		}
		info {
			events = [
					TestLogEvent.PASSED,
					TestLogEvent.SKIPPED,
					TestLogEvent.FAILED,
			]
			exceptionFormat TestExceptionFormat.FULL
		}
	}
}
tasks.compileJava {
	javaCompiler.set(javaToolchains.compilerFor {
		languageVersion.set(JavaLanguageVersion.of(8))
	})
}
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
	withJavadocJar()
	withSourcesJar()
}
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
	options.compilerArgs += [
			"-Werror",
			"-Xlint:auxiliaryclass",
			"-Xlint:cast",
			"-Xlint:classfile",
			"-Xlint:deprecation",
			"-Xlint:dep-ann",
			"-Xlint:divzero",
			"-Xlint:empty",
			"-Xlint:fallthrough",
			"-Xlint:finally",
			"-Xlint:options",
			"-Xlint:overloads",
			"-Xlint:overrides",
			"-Xlint:path",
			"-Xlint:processing",
			"-Xlint:rawtypes",
			"-Xlint:serial",
			"-Xlint:static",
			"-Xlint:try",
			"-Xlint:unchecked",
			"-Xlint:varargs",
	]
}
tasks.withType(Javadoc) {
	options.links += [
			"https://docs.oracle.com/javase/8/docs/api/",
	]
	options.addStringOption("Xdoclint:none", "-quiet")
	options.charSet = "UTF-8"
	options.encoding = "UTF-8"
	options.docEncoding = "UTF-8"
	options.windowTitle = "${project.name} ${project.version} API"
	options.source = "8"
}
