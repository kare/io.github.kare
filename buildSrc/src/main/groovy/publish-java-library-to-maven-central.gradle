plugins {
	id "java-library"
	id "signing"
	id "maven-publish"
}

def hasSigningKey = project.hasProperty("signingKey")
if (hasSigningKey) {
	sign(project)
}

signing {
	sign publishing.publications
}

void sign(Project project) {
	project.signing {
		required {
			!project.hasProperty("skipSigning")
		}
		def signingKey = project.findProperty("signingKey")
		def signingPassword = project.findProperty("signingPassword")
		useInMemoryPgpKeys(signingKey, signingPassword)
		sign publishing.publications.mavenJava
	}
}

publishing {
	publications {
		mavenJava(org.gradle.api.publish.maven.MavenPublication) {
			from(project.components.java)
			/*versionMapping {
				usage("java-api") {
					fromResolutionOf("runtimeClasspath")
				}
				usage("java-runtime") {
					fromResolutionResult()
				}
			}*/
			pom {
				afterEvaluate {
					description = "${project.description}"
				}
				url = "https://github.com/kare/io.github.kare"
				inceptionYear = "2021"
				licenses {
					license {
						name = "Apache-2.0"
						url = "https://opensource.org/licenses/Apache-2.0"
						distribution = "repo"
					}
				}
				developers {
					developer {
						id = "kare"
						name = "Kare Nuorteva"
						email = "kare.nuorteva@me.com"
					}
				}
				scm {
					connection = "scm:git:https://github.com/kare/io.github.kare"
					developerConnection = "scm:git:ssh://github.com/kare/io.github.kare.git"
					url = "https://github.com/kare/io.github.kare"
				}
				issueManagement {
					system = "GitHub"
					url = "https://github.com/kare/io.github.kare/issues"
				}
				ciManagement {
					system = "GitHub"
					url = "https://github.com/kare/io.github.kare/actions"
				}
				organization {
					name = "Kare Nuorteva"
					url = "https://karenuorteva.fi/"
				}
			}
		}
	}
}
