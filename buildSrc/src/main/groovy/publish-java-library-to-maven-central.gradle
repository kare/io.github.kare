plugins {
	id "java-library"
	id "signing"
	id "maven-publish"
}

def hasSigningKey = project.hasProperty("signingKeyId") || project.hasProperty("signingKey")
if (hasSigningKey) {
	sign(project)
}

signing {
	sign publishing.publications
}

void sign(Project project) {
	project.signing {
		required {
			project.gradle.taskGraph.hasTask("publish") &&
					!project.version.toString().endsWith("-SNAPSHOT") &&
					!project.hasProperty("skipSigning")
		}
		def signingKeyId = project.findProperty("signingKeyId")
		def signingKey = project.findProperty("signingKey")
		def signingPassword = project.findProperty("signingPassword")
		useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
		sign publishing.publications.maven
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from(components.java)
			pom {
				name = "${project.group}:${project.name}"
				description = name
				url = "https://github.com/kare/io.github.kare"
				inceptionYear = "2021"
				licenses {
					license {
						name = "The Apache License, Version 2.0"
						url = "https://www.apache.org/licenses/LICENSE-2.0"
					}
				}
				developers {
					developer {
						id = "kare"
						name = "Kare Nuorteva"
						email = "kare.nuorteva@me.com"
					}
				}
				scm {
					connection = "scm:git:https://github.com/kare/io.github.kare"
					developerConnection = "scm:git:ssh://github.com/kare/io.github.kare.git"
					url = "https://github.com/kare/io.github.kare"
				}
			}
		}
	}
}
