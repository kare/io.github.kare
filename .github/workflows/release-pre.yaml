name: Pre Release

defaults:
  run:
    shell: bash

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-alpha.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+'

jobs:
  pre-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set environment
        id: env
        run: |
          make -f Makefile.ci install-tools
          echo "$HOME/bin" >> $GITHUB_PATH
          echo "::set-output name=release_notes_file::$(mktemp)"
          echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}
      - name: Generate Release Notes
        id: release-notes
        run: |
          git sv release-notes --tag ${{ steps.env.outputs.version }} >> ${{ steps.env.outputs.release_notes_file }}
          echo "::set-output name=release_notes_body::$(cat ${{ steps.env.outputs.release_notes_file }})"
      - name: Publish to Maven Central
        env:
          ORG_GRADLE_PROJECT_SIGNINGKEY: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
          ORG_GRADLE_PROJECT_SIGNINGKEYID: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEYID }}
          ORG_GRADLE_PROJECT_SIGNINPASSWORD: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINPASSWORD }}
          ORG_GRADLE_PROJECT_SONATYPEUSERNAME: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEUSERNAME }}
          ORG_GRADLE_PROJECT_SONATYPEPASSWORD: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEPASSWORD }}
        run: |
          ./gradlew --stacktrace --info publishToSonatype closeAndReleaseSonatypeStagingRepository
      - uses: ncipollo/release-action@v1.8.8
        id: create_release
        with:
          tag: ${{ github.ref }}
          body: ${{ steps.release-notes.outputs.release_notes_body }}
          prerelease: true
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}
